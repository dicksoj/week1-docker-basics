name: CI - Docker FastAPI App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and start services
        run: docker compose up --build -d

      - name: List running containers
        run: docker ps -a

      - name: Wait for container health
        run: |
          CONTAINER=$(docker ps --filter "name=web" --format "{{.Names}}")
          echo "Inspecting container: $CONTAINER"
          for i in {1..15}; do
            STATUS=$(docker inspect --format='{{if .State.Health}}{{.State.Health.Status}}{{else}}none{{end}}' $CONTAINER)
            echo "Attempt $i: STATUS=$STATUS"
            if [ "$STATUS" = "healthy" ]; then
              echo "✅ Service is healthy!"
              exit 0
            fi
            sleep 2
          done
          echo "❌ Container did not become healthy"
          docker logs $CONTAINER
          exit 1

      - name: Show healthcheck logs
        if: always()
        run: |
          CONTAINER=$(docker ps --filter "name=web" --format "{{.Names}}")
          echo "Healthcheck logs for container: $CONTAINER"
          docker inspect --format='{{json .State.Health}}' $CONTAINER | jq

      - name: Test API endpoint
        run: |
          CONTAINER=$(docker ps --filter "name=web" --format "{{.Names}}")
          CONTAINER_IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $CONTAINER)
          echo "Testing API at http://$CONTAINER_IP:8000/"
          curl -f http://$CONTAINER_IP:8000/ || exit 1

      - name: Stop services
        if: always()
        run: docker compose down
